{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///D:/code/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///D:/code/src/ai/flows/chat.ts"],"sourcesContent":["'use server'\nimport { ai } from '@/ai/genkit'\nimport { z } from 'genkit'\nconst Msg = z.object({\n message: z.string().describe('ai thinks')\n})\nexport type input = z.infer<typeof Msg>\nconst reply = z.object({\n response: z.string().describe('ai reply')\n})\nexport type typeOfOut = z.infer<typeof reply>\n\nexport async function prompt (d: input): Promise<typeOfOut>{\n return theFlow(d)\n}\n\n\nconst r = ai.definePrompt({\nname: \"thePromptyThing\",\ninput: {schema: Msg},\noutput: {schema: reply},\nprompt: `u r a coder bot or smth. just help ppl code ok?? keep it short & markdown style\n\nwhen user says:\n{{{message}}}\n`,\n})\n\nconst theFlow = ai.defineFlow({\n\nname: 'Flow',\ninputSchema: Msg,\noutputSchema: reply\n}, async (x)=>{\n    const {    output  } = await r(x)\n    return output!\n})\n"],"names":[],"mappings":";;;;;AACA;AACA;AAAA;;;;;;AACA,MAAM,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpB,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAEA,MAAM,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtB,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,OAAQ,CAAQ;IACrC,OAAO,QAAQ;AAChB;AAGA,MAAM,IAAI,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC1B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAG;IACnB,QAAQ;QAAC,QAAQ;IAAK;IACtB,QAAQ,CAAC;;;;AAIT,CAAC;AACD;AAEA,MAAM,UAAU,mHAAA,CAAA,KAAE,CAAC,UAAU,CAAC;IAE9B,MAAM;IACN,aAAa;IACb,cAAc;AACd,GAAG,OAAO;IACN,MAAM,EAAK,MAAM,EAAG,GAAG,MAAM,EAAE;IAC/B,OAAO;AACX;;;IAxBsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///D:/code/.next-internal/server/app/ai-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {prompt as '40d84bd9f6d6b4d29b0e775f3ff58fbab592384887'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///D:/code/src/app/ai-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ai-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ai-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file:///D:/code/src/app/ai-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/ai-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/ai-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6Q,GAC1S,2CACA","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}